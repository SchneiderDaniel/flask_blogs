# Configure worker processes based on available CPU cores
worker_processes auto;
worker_cpu_affinity auto;

# Include additional modules from the "nginx-extra" package
include /etc/nginx/modules-enabled/*.conf;

# Events block
events {
    worker_connections 1024;  # Adjust this based on expected concurrent users
}

http {
    # Include additional configuration files
    include /etc/nginx/conf.d/*.conf;

    # Configure logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Server names hash bucket size
    server_names_hash_bucket_size 64;

   # Default security headers with an updated CSP
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy no-referrer-when-downgrade;
    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self' https://www.google-analytics.com;";
    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://www.google-analytics.com https://region1.google-analytics.com https://www.googletagmanager.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://www.google-analytics.com https://region1.google-analytics.com;";


    # add_header Content-Security-Policy "default-src 'self';";


    # Default server configuration for HTTP to HTTPS redirection
    server {
        listen 80 default_server;
        server_name localhost;  # Only catch requests to localhost

        # Redirect all HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server configuration
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        server_name localhost;  # Only catch requests to localhost

        # SSL certificate and key configuration
        ssl_certificate     /etc/letsencrypt/live/localhost.crt;  # Path to your SSL certificate
        ssl_certificate_key /etc/letsencrypt/live/localhost.key;  # Path to your SSL certificate key

        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # Proxy all requests to the flask_hippocooking container
        location / {
            include uwsgi_params;  # Include the default uWSGI parameters
            uwsgi_pass flask_hippocooking:5001;  # Forward requests to Flask app
            client_max_body_size 10M;  # Adjust this value as needed
        }

        # Enable Gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Set timeout values for proxying
        proxy_read_timeout 60;
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
    }
}
