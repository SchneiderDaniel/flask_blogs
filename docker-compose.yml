services:

  flask_hippocooking:
    build: ./flask_hippocooking
    env_file: 
      - flask_hippocooking/flask_hippocooking.env
    container_name: flask_hippocooking
    restart: always
    volumes:
      - ./flask_hippocooking_volume/uwsgilogs:/var/log/uwsgi/
      - ./flask_hippocooking_volume/recipes:/app/homepage/static/recipes
      - ./flask_hippocooking_volume/recipes_images:/app/homepage/static/recipes_images
    expose:
      - 5001
    networks:
      - docker_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx_volume/ssl:/etc/letsencrypt
      - ./nginx_volume/ssl-dhparams:/etc/ssl/certs
      - ./nginx_volume/certbot:/var/www/certbot
      - ./nginx_volume/certbotlogs:/var/log/letsencrypt
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $$!; done'
    networks:
      - docker_network

  nginx_web_server:
    build:
      context: ./nginx  # Path to the Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT}  # Pass the ENVIRONMENT variable
    container_name: nginx_web_server
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx_volume/nginx_errors:/var/log/nginx
      - ./nginx_volume/ssl:/etc/letsencrypt
      - ./nginx_volume/ssl-dhparams:/etc/ssl/certs
      - ./nginx_volume/certbot:/var/www/certbot
    depends_on:
      - certbot
    networks:
      - docker_network


#Docker Networks
networks:
  docker_network:
    driver: bridge